enum enum_t{};

class Classe{
  public:
    Classe();
    Classe(//parametri);
    Classe(Classe& c);
    ~Classe();
    
    Classe& operator= (const Classe&);
    int operator%(int s);
    int operator[](int s);
    int operator!();
    Class& operator+=(const Class& c);
    Class operator- (Colore c) const;
    friend ostream& operator<< (ostream&, const Classe&);
    friend istream& operator>> (istream&, Classe&);
  private:
    void copia (const Classe& m);
    void distruggi();
  
};

Classe::Classe(){

}

Classe::Classe(//parametri){

}

Classe::Classe(Classe& c){
  copia(c);
}

Classe::~Classe(){
  distuggi();
}

Classe& Classe::operator= (const Classe& m)
{
  if (this != &m)
    {
      distruggi();
      copia(m);
    }
  return *this;
}

ostream& operator<<(ostream& os, const Classe&){

  return os;
}

istream& operator>> (istream& is, Striscia& s){

  return is;			
}

void Classe::copia (const Classe& m){

}

void Classe::distruggi(){

}
