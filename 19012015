
class Accumulatore{
  public:
    Accumulatore();
    Accumulatore(Accumulatore&);
    ~Accumulatore();
    
    Accumulatore& operator= (const Accumulatore&);
    int operator%(int);
    int operator!();
    void inserisci(int);
    int estrai(int, int);
  private:
    void copia (const Accumulatore&);
    void distruggi();
  
};

Accumulatore::Accumulatore(){

}

Accumulatore::Accumulatore(Accumulatore& a){
  copia(c);
}

Accumulatore::~Accumulatore(){
  distuggi();
}

Accumulatore& Accumulatore::operator= (const Accumulatore& a)
{
  if (this != &a)
    {
      distruggi();
      copia(a);
    }
  return *this;
}


voidAccumulatore::copia (const Accumulatore& a){

}

void Accumulatore::distruggi(){

}
